{
    "nodes": [
        {
            "uid": "GC4m",
            "x": 0,
            "y": 100,
            "type": "StartNode",
            "next_node": "yPma",
            "label": null
        },
        {
            "uid": "yPma",
            "x": 200,
            "y": 100,
            "type": "PythonCodeNode",
            "next_node": "Arh4",
            "code": "import random\n\nvalue = random.choice([1, 100, 1000, 2400, 2600, 4000, 10000, 100000])\ncategory = random.choice([\"Spare Parts\", \"New Car\", \"Pre-owned Car\"])\n\n\n\n\n\n\n\n\n\n",
            "on_exception_node": null,
            "label": "Parse order data from email"
        },
        {
            "uid": "Arh4",
            "x": 400,
            "y": 100,
            "type": "ActivityNode",
            "next_node": "IX3P",
            "label": "Decide on responsible party",
            "activity": "automagica.activities.human_decision",
            "args": {
                "message": "\"The order value is: '\" + str(value) + \"', the order category is: '\" + str(category) + \"'\\n\\nSelect all responsible parties:\"",
                "choices": "[\"Sales\", \"Mechanical Engineering Experts\", \"Management\"]"
            },
            "class": null,
            "return_": "decisionResult",
            "on_exception_node": null
        },
        {
            "uid": "IX3P",
            "x": 600,
            "y": 100,
            "type": "ActivityNode",
            "next_node": null,
            "label": "Notify responsible parties via email",
            "activity": "automagica.activities.print_console",
            "args": {
                "data": "\"Responsible parties: \" + str(decisionResult)"
            },
            "class": null,
            "return_": null,
            "on_exception_node": null
        }
    ],
    "name": "Unnamed Flow"
}